# Copyright 2018 Thales e-Security
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
# OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

swagger: '2.0'
info:
  description: RFC 7030 (EST) server implementation
  version: 1.0.0
  title: est server
tags:
  - name: operation
    description: RFC 7030 operations
schemes:
  - https
basePath: /.well-known/est
securityDefinitions:
  basicAuth:
    type: basic
paths:
  /cacerts:
    get:
      tags:
        - operation
      summary: Distribution of CA Certificates
      operationId: cacerts
      produces:
        - application/pkcs7-mime
      responses:
        200:
          description: successful operation
          schema:
            type: string
          headers:
            Content-Transfer-Encoding:
              type: string
              default: base64
            Content-Type:
              type: string
              default: application/pkcs7-mime

        500:
          description: something went wrong
          schema:
            type: string

  /simpleenroll:
    post:
      tags:
        - operation
      summary: Enrollment of Clients
      operationId: simpleenroll
      consumes:
        - application/pkcs10
      produces:
        - application/pkcs7-mime
      parameters:
        - name: certrequest
          in: body
          description: PKCS10 certificate request (DER format, base64 encoded)
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          schema:
            type: string
          headers:
            Content-Transfer-Encoding:
              type: string
              default: base64
            Content-Type:
              type: string
              default: application/pkcs7-mime
        400:
          description: invalid request
          schema:
            type: string
        401:
          $ref: '#/responses/UnauthorizedError'
        500:
          description: something went wrong
          schema:
            type: string
      security:
        - basicAuth: []
  /simplereenroll:
    post:
      tags:
        - operation
      summary: Enrollment of Clients (requires mutual-tls)
      operationId: simplereenroll
      consumes:
        - application/pkcs10
      produces:
        - application/pkcs7-mime
      parameters:
        - name: certrequest
          in: body
          description: PKCS10 certificate request (DER format, base64 encoded)
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          schema:
            type: string
          headers:
            Content-Transfer-Encoding:
              type: string
              default: base64
            Content-Type:
              type: string
              default: application/pkcs7-mime
        400:
          description: invalid request
          schema:
            type: string
        401:
          $ref: '#/responses/UnauthorizedError'
        403:
          description: client certificates were not presented
          schema:
            type: string
        500:
          description: something went wrong
          schema:
            type: string
      # the following allows no auth or basic auth (i.e. blank line is important)
      security:
        -
          basicAuth: []

responses:
  UnauthorizedError:
    description: Authentication information is missing or invalid
    headers:
      WWW_Authenticate:
        type: string
